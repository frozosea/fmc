syntax = "proto3";

package proto_freight;
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
option go_package = "../../";

service FreightService {
  rpc GetFreights(GetFreightRequest) returns (GetFreightsResponseList);
  rpc AddFreight(AddFreightRequest) returns (google.protobuf.Empty);
}
service CityService{
  rpc AddCity(AddCityRequest) returns (google.protobuf.Empty);
  rpc GetAllCities(google.protobuf.Empty) returns (GetAllCitiesResponse);
}

service ContactService{
  rpc AddContact(AddContactRequest) returns (google.protobuf.Empty);
  rpc GetAllContacts(google.protobuf.Empty) returns (GetAllContactsResponse);
}

service LineService{
  rpc AddLine(stream AddLineRequest) returns (google.protobuf.Empty);
  rpc GetAllLines(google.protobuf.Empty) returns (GetAllLinesResponse);

}
message City{
  int64 CityId = 1;
  string CityName = 2;
  string CityUnlocode = 3;
}
enum containerType{
  TWENTY_STANDARD = 0;
  FORTY_STANDARD = 1;
  FORTY_HIGH_CUBE = 2;
  FORTY_FIVE_HIGH_CUBE = 3;
}
message Container {
  containerType container_type = 1;
  int64 containerTypeId = 2;
}


message Line{
  int64 line_id = 1;
  string scac = 2;
  string line_name = 3;
  string line_image = 4;
}
message GetFreightRequest{
  int64 from_city_id = 1;
  int64 to_city_id = 3;
  Container container_type = 5;
  int64 limit = 6;
}

message Contact{
  int64 id = 1;
  string url = 2;
  string phone_number = 3;
  string agent_name = 4;
  string email = 5;
}

message GetFreightResponse{
  City from_city = 1;
  City to_city = 3;
  Container container_type = 5;
  int64 usd_price = 6;
  Line line = 7;
  Contact contact = 8;
}

message GetFreightsResponseList{
  repeated GetFreightResponse multi_response = 1;
}

message AddFreightRequest{
  int64 from_city_id = 1;
  int64 to_city_id = 2;
  int64 container_type_id = 3;
  int64 usd_price = 4;
  int64 line_id = 5;
  google.protobuf.Timestamp from_date = 6;
  google.protobuf.Timestamp expiry_date = 7;
  int64 contact_id = 8;
}

message AddCityRequest{
  string city_full_name = 1;
  string unlocode = 2;
}

message GetAllCitiesResponse{
  repeated City cities = 1;
}
message AddContactRequest{
  string url = 1;
  string email = 2;
  string agent_name = 3;
  string phone_number = 4;
}
message GetAllContactsResponse{
  repeated Contact contact = 1;
}

message AddLineRequest{
  string scac = 1;
  string full_name = 2;
  bytes image = 3;
}

message GetAllLinesResponse{
  repeated Line lines = 1;
}