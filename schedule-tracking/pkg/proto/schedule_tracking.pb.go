// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: schedule_tracking.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateTrackingTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []string `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Time    string   `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	UserId  int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateTrackingTimeRequest) Reset() {
	*x = UpdateTrackingTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTrackingTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrackingTimeRequest) ProtoMessage() {}

func (x *UpdateTrackingTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrackingTimeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrackingTimeRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateTrackingTimeRequest) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *UpdateTrackingTimeRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UpdateTrackingTimeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AddOneNumberOnTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Number              string   `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Emails              []string `protobuf:"bytes,3,rep,name=emails,proto3" json:"emails,omitempty"`
	EmailMessageSubject string   `protobuf:"bytes,4,opt,name=email_message_subject,json=emailMessageSubject,proto3" json:"email_message_subject,omitempty"`
	Time                string   `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *AddOneNumberOnTrackRequest) Reset() {
	*x = AddOneNumberOnTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOneNumberOnTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOneNumberOnTrackRequest) ProtoMessage() {}

func (x *AddOneNumberOnTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOneNumberOnTrackRequest.ProtoReflect.Descriptor instead.
func (*AddOneNumberOnTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{1}
}

func (x *AddOneNumberOnTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddOneNumberOnTrackRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *AddOneNumberOnTrackRequest) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *AddOneNumberOnTrackRequest) GetEmailMessageSubject() string {
	if x != nil {
		return x.EmailMessageSubject
	}
	return ""
}

func (x *AddOneNumberOnTrackRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type AddOnTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddOnTrackRequest []*AddOneNumberOnTrackRequest `protobuf:"bytes,1,rep,name=add_on_track_request,json=addOnTrackRequest,proto3" json:"add_on_track_request,omitempty"`
}

func (x *AddOnTrackRequest) Reset() {
	*x = AddOnTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOnTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOnTrackRequest) ProtoMessage() {}

func (x *AddOnTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOnTrackRequest.ProtoReflect.Descriptor instead.
func (*AddOnTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{2}
}

func (x *AddOnTrackRequest) GetAddOnTrackRequest() []*AddOneNumberOnTrackRequest {
	if x != nil {
		return x.AddOnTrackRequest
	}
	return nil
}

type BaseAddOnTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Number      string `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	NextRunTime int64  `protobuf:"varint,3,opt,name=next_run_time,json=nextRunTime,proto3" json:"next_run_time,omitempty"`
}

func (x *BaseAddOnTrackResponse) Reset() {
	*x = BaseAddOnTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAddOnTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAddOnTrackResponse) ProtoMessage() {}

func (x *BaseAddOnTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAddOnTrackResponse.ProtoReflect.Descriptor instead.
func (*BaseAddOnTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{3}
}

func (x *BaseAddOnTrackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BaseAddOnTrackResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *BaseAddOnTrackResponse) GetNextRunTime() int64 {
	if x != nil {
		return x.NextRunTime
	}
	return 0
}

type RepeatedBaseAddOnTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []*BaseAddOnTrackResponse `protobuf:"bytes,1,rep,name=response,proto3" json:"response,omitempty"`
}

func (x *RepeatedBaseAddOnTrackResponse) Reset() {
	*x = RepeatedBaseAddOnTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedBaseAddOnTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedBaseAddOnTrackResponse) ProtoMessage() {}

func (x *RepeatedBaseAddOnTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedBaseAddOnTrackResponse.ProtoReflect.Descriptor instead.
func (*RepeatedBaseAddOnTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{4}
}

func (x *RepeatedBaseAddOnTrackResponse) GetResponse() []*BaseAddOnTrackResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type AddOnTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResponse   []*BaseAddOnTrackResponse `protobuf:"bytes,1,rep,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	AlreadyOnTrack []string                  `protobuf:"bytes,3,rep,name=already_on_track,json=alreadyOnTrack,proto3" json:"already_on_track,omitempty"`
}

func (x *AddOnTrackResponse) Reset() {
	*x = AddOnTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOnTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOnTrackResponse) ProtoMessage() {}

func (x *AddOnTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOnTrackResponse.ProtoReflect.Descriptor instead.
func (*AddOnTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{5}
}

func (x *AddOnTrackResponse) GetBaseResponse() []*BaseAddOnTrackResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *AddOnTrackResponse) GetAlreadyOnTrack() []string {
	if x != nil {
		return x.AlreadyOnTrack
	}
	return nil
}

type AddEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numbers []string `protobuf:"bytes,1,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Emails  []string `protobuf:"bytes,2,rep,name=emails,proto3" json:"emails,omitempty"`
	UserId  int64    `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *AddEmailRequest) Reset() {
	*x = AddEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmailRequest) ProtoMessage() {}

func (x *AddEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmailRequest.ProtoReflect.Descriptor instead.
func (*AddEmailRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{6}
}

func (x *AddEmailRequest) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *AddEmailRequest) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *AddEmailRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteEmailFromTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Email  string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	UserId int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteEmailFromTrackRequest) Reset() {
	*x = DeleteEmailFromTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEmailFromTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEmailFromTrackRequest) ProtoMessage() {}

func (x *DeleteEmailFromTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEmailFromTrackRequest.ProtoReflect.Descriptor instead.
func (*DeleteEmailFromTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEmailFromTrackRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *DeleteEmailFromTrackRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DeleteEmailFromTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetInfoAboutTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	UserId int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetInfoAboutTrackRequest) Reset() {
	*x = GetInfoAboutTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoAboutTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoAboutTrackRequest) ProtoMessage() {}

func (x *GetInfoAboutTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoAboutTrackRequest.ProtoReflect.Descriptor instead.
func (*GetInfoAboutTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{8}
}

func (x *GetInfoAboutTrackRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetInfoAboutTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetInfoAboutTrackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number              string   `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Emails              []string `protobuf:"bytes,3,rep,name=emails,proto3" json:"emails,omitempty"`
	NextRunTime         int64    `protobuf:"varint,4,opt,name=next_run_time,json=nextRunTime,proto3" json:"next_run_time,omitempty"`
	EmailMessageSubject string   `protobuf:"bytes,5,opt,name=email_message_subject,json=emailMessageSubject,proto3" json:"email_message_subject,omitempty"`
}

func (x *GetInfoAboutTrackResponse) Reset() {
	*x = GetInfoAboutTrackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoAboutTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoAboutTrackResponse) ProtoMessage() {}

func (x *GetInfoAboutTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoAboutTrackResponse.ProtoReflect.Descriptor instead.
func (*GetInfoAboutTrackResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{9}
}

func (x *GetInfoAboutTrackResponse) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *GetInfoAboutTrackResponse) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *GetInfoAboutTrackResponse) GetNextRunTime() int64 {
	if x != nil {
		return x.NextRunTime
	}
	return 0
}

func (x *GetInfoAboutTrackResponse) GetEmailMessageSubject() string {
	if x != nil {
		return x.EmailMessageSubject
	}
	return ""
}

type DeleteFromTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Number []string `protobuf:"bytes,2,rep,name=number,proto3" json:"number,omitempty"`
}

func (x *DeleteFromTrackRequest) Reset() {
	*x = DeleteFromTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFromTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFromTrackRequest) ProtoMessage() {}

func (x *DeleteFromTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFromTrackRequest.ProtoReflect.Descriptor instead.
func (*DeleteFromTrackRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteFromTrackRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFromTrackRequest) GetNumber() []string {
	if x != nil {
		return x.Number
	}
	return nil
}

type GetTimeZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeZone string `protobuf:"bytes,1,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
}

func (x *GetTimeZoneResponse) Reset() {
	*x = GetTimeZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimeZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimeZoneResponse) ProtoMessage() {}

func (x *GetTimeZoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimeZoneResponse.ProtoReflect.Descriptor instead.
func (*GetTimeZoneResponse) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{11}
}

func (x *GetTimeZoneResponse) GetTimeZone() string {
	if x != nil {
		return x.TimeZone
	}
	return ""
}

type ChangeEmailMessageSubjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number     string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	NewSubject string `protobuf:"bytes,2,opt,name=new_subject,json=newSubject,proto3" json:"new_subject,omitempty"`
	UserId     int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ChangeEmailMessageSubjectRequest) Reset() {
	*x = ChangeEmailMessageSubjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schedule_tracking_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeEmailMessageSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeEmailMessageSubjectRequest) ProtoMessage() {}

func (x *ChangeEmailMessageSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_tracking_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeEmailMessageSubjectRequest.ProtoReflect.Descriptor instead.
func (*ChangeEmailMessageSubjectRequest) Descriptor() ([]byte, []int) {
	return file_schedule_tracking_proto_rawDescGZIP(), []int{12}
}

func (x *ChangeEmailMessageSubjectRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *ChangeEmailMessageSubjectRequest) GetNewSubject() string {
	if x != nil {
		return x.NewSubject
	}
	return ""
}

func (x *ChangeEmailMessageSubjectRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_schedule_tracking_proto protoreflect.FileDescriptor

var file_schedule_tracking_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xad, 0x01, 0x0a,
	0x1a, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x6e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5d, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x61,
	0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x6e, 0x0a, 0x16, 0x42, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x66, 0x0a, 0x1e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64,
	0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x64,
	0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x79, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x22, 0x5c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x72, 0x75, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6e, 0x65, 0x78, 0x74, 0x52, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x49, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22, 0x74,
	0x0a, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65,
	0x77, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x32, 0xef, 0x07, 0x0a, 0x10, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x63, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x11, 0x41, 0x64, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x73, 0x4f, 0x6e, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x12, 0x23, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x4f,
	0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x4f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x21,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x12, 0x2d, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x69, 0x6c, 0x6c, 0x4e, 0x6f, 0x73, 0x46, 0x72,
	0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x12, 0x2a, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x25, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x19, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x32, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_schedule_tracking_proto_rawDescOnce sync.Once
	file_schedule_tracking_proto_rawDescData = file_schedule_tracking_proto_rawDesc
)

func file_schedule_tracking_proto_rawDescGZIP() []byte {
	file_schedule_tracking_proto_rawDescOnce.Do(func() {
		file_schedule_tracking_proto_rawDescData = protoimpl.X.CompressGZIP(file_schedule_tracking_proto_rawDescData)
	})
	return file_schedule_tracking_proto_rawDescData
}

var file_schedule_tracking_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_schedule_tracking_proto_goTypes = []interface{}{
	(*UpdateTrackingTimeRequest)(nil),        // 0: schedule_tacking.UpdateTrackingTimeRequest
	(*AddOneNumberOnTrackRequest)(nil),       // 1: schedule_tacking.AddOneNumberOnTrackRequest
	(*AddOnTrackRequest)(nil),                // 2: schedule_tacking.AddOnTrackRequest
	(*BaseAddOnTrackResponse)(nil),           // 3: schedule_tacking.BaseAddOnTrackResponse
	(*RepeatedBaseAddOnTrackResponse)(nil),   // 4: schedule_tacking.RepeatedBaseAddOnTrackResponse
	(*AddOnTrackResponse)(nil),               // 5: schedule_tacking.AddOnTrackResponse
	(*AddEmailRequest)(nil),                  // 6: schedule_tacking.AddEmailRequest
	(*DeleteEmailFromTrackRequest)(nil),      // 7: schedule_tacking.DeleteEmailFromTrackRequest
	(*GetInfoAboutTrackRequest)(nil),         // 8: schedule_tacking.GetInfoAboutTrackRequest
	(*GetInfoAboutTrackResponse)(nil),        // 9: schedule_tacking.GetInfoAboutTrackResponse
	(*DeleteFromTrackRequest)(nil),           // 10: schedule_tacking.DeleteFromTrackRequest
	(*GetTimeZoneResponse)(nil),              // 11: schedule_tacking.GetTimeZoneResponse
	(*ChangeEmailMessageSubjectRequest)(nil), // 12: schedule_tacking.ChangeEmailMessageSubjectRequest
	(*emptypb.Empty)(nil),                    // 13: google.protobuf.Empty
}
var file_schedule_tracking_proto_depIdxs = []int32{
	1,  // 0: schedule_tacking.AddOnTrackRequest.add_on_track_request:type_name -> schedule_tacking.AddOneNumberOnTrackRequest
	3,  // 1: schedule_tacking.RepeatedBaseAddOnTrackResponse.response:type_name -> schedule_tacking.BaseAddOnTrackResponse
	3,  // 2: schedule_tacking.AddOnTrackResponse.base_response:type_name -> schedule_tacking.BaseAddOnTrackResponse
	2,  // 3: schedule_tacking.ScheduleTracking.AddContainersOnTrack:input_type -> schedule_tacking.AddOnTrackRequest
	2,  // 4: schedule_tacking.ScheduleTracking.AddBillNosOnTrack:input_type -> schedule_tacking.AddOnTrackRequest
	0,  // 5: schedule_tacking.ScheduleTracking.UpdateTrackingTime:input_type -> schedule_tacking.UpdateTrackingTimeRequest
	6,  // 6: schedule_tacking.ScheduleTracking.AddEmailsOnTracking:input_type -> schedule_tacking.AddEmailRequest
	7,  // 7: schedule_tacking.ScheduleTracking.DeleteEmailFromTrack:input_type -> schedule_tacking.DeleteEmailFromTrackRequest
	10, // 8: schedule_tacking.ScheduleTracking.DeleteContainersFromTrack:input_type -> schedule_tacking.DeleteFromTrackRequest
	10, // 9: schedule_tacking.ScheduleTracking.DeleteBillNosFromTrack:input_type -> schedule_tacking.DeleteFromTrackRequest
	8,  // 10: schedule_tacking.ScheduleTracking.GetInfoAboutTrack:input_type -> schedule_tacking.GetInfoAboutTrackRequest
	13, // 11: schedule_tacking.ScheduleTracking.GetTimeZone:input_type -> google.protobuf.Empty
	12, // 12: schedule_tacking.ScheduleTracking.ChangeEmailMessageSubject:input_type -> schedule_tacking.ChangeEmailMessageSubjectRequest
	5,  // 13: schedule_tacking.ScheduleTracking.AddContainersOnTrack:output_type -> schedule_tacking.AddOnTrackResponse
	5,  // 14: schedule_tacking.ScheduleTracking.AddBillNosOnTrack:output_type -> schedule_tacking.AddOnTrackResponse
	4,  // 15: schedule_tacking.ScheduleTracking.UpdateTrackingTime:output_type -> schedule_tacking.RepeatedBaseAddOnTrackResponse
	13, // 16: schedule_tacking.ScheduleTracking.AddEmailsOnTracking:output_type -> google.protobuf.Empty
	13, // 17: schedule_tacking.ScheduleTracking.DeleteEmailFromTrack:output_type -> google.protobuf.Empty
	13, // 18: schedule_tacking.ScheduleTracking.DeleteContainersFromTrack:output_type -> google.protobuf.Empty
	13, // 19: schedule_tacking.ScheduleTracking.DeleteBillNosFromTrack:output_type -> google.protobuf.Empty
	9,  // 20: schedule_tacking.ScheduleTracking.GetInfoAboutTrack:output_type -> schedule_tacking.GetInfoAboutTrackResponse
	11, // 21: schedule_tacking.ScheduleTracking.GetTimeZone:output_type -> schedule_tacking.GetTimeZoneResponse
	13, // 22: schedule_tacking.ScheduleTracking.ChangeEmailMessageSubject:output_type -> google.protobuf.Empty
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_schedule_tracking_proto_init() }
func file_schedule_tracking_proto_init() {
	if File_schedule_tracking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_schedule_tracking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTrackingTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOneNumberOnTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOnTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAddOnTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedBaseAddOnTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOnTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEmailFromTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoAboutTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoAboutTrackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFromTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimeZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schedule_tracking_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeEmailMessageSubjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schedule_tracking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schedule_tracking_proto_goTypes,
		DependencyIndexes: file_schedule_tracking_proto_depIdxs,
		MessageInfos:      file_schedule_tracking_proto_msgTypes,
	}.Build()
	File_schedule_tracking_proto = out.File
	file_schedule_tracking_proto_rawDesc = nil
	file_schedule_tracking_proto_goTypes = nil
	file_schedule_tracking_proto_depIdxs = nil
}
